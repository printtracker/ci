on:
  workflow_call:
    inputs:
      context:
        type: string
        default: .
      dockerfile:
        type: string
      latest:
        type: boolean
        default: true
      image:
        type: string
        default: ${{github.repository}}
      use-gcr:
        description: Whether to upload Docker images to Google Container Registry
        type: boolean
        default: true
    outputs:
      image-tag:
        description: The tag of the image that was created
        value: ${{jobs.version.outputs.tag}}

jobs:
  version:
    name: Version
    uses: printtracker/ci/.github/workflows/version.yml@master
  containerize:
    # runs-on: ubuntu-latest
    runs-on: self-hosted
    name: Containerize
    needs: version
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        if: ${{ !inputs.use-gcr }}
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - run: echo "${{toJSON(secrets)}}"
      - run: echo "${{toJSON(secrets.GCP_CREDENTIALS)}}"
      - name: Login to GCR
        uses: docker/login-action@v2
        if: ${{ inputs.use-gcr }}
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GCP_CREDENTIALS }}
      - name: Get registry name
        id: registry
        run: |
          echo "::set-output name=registry::${{ (inputs.use-gcr && 'gcr.io') || 'ghcr.io' }}"
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ${{inputs.context}}
          file: ${{inputs.dockerfile}}
          push: true
          # Create tagged Docker images for the actual commit tag, then 
          # the branch name (for caching) and the latest if the inputs 
          # specify that a 'latest' tag should be created. Only create
          # a branch tag if the ref name of the branch does not contain
          # the tag name. 
          tags: |
            ${{steps.registry.outputs.registry}}/${{inputs.image}}:${{needs.version.outputs.tag}}
            ${{steps.registry.outputs.registry}}/${{inputs.image}}:${{needs.version.outputs.ref}}
            ${{(inputs.latest == true && format('{0}/{1}:latest', steps.registry.outputs.registry, inputs.image)) || '' }}
          cache-from: type=registry,ref=${{steps.registry.outputs.registry}}/${{inputs.image}}:${{needs.version.outputs.ref}}
          cache-to: type=inline
          build-args: |
            VERSION=${{needs.version.outputs.tag}}
            HASH=${{needs.version.outputs.sha}}